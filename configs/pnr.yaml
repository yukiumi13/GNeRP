expname: ???

device_ids: -1     # single GPU / DP / DDP; run on all available GPUs; 

data:
  type: PolData
  batch_size: 1 # MUST be one    
  data_dir: ???
  downscale: 1       # downscale image for training
  scale_radius: 2.0   # scale the dataset's all camera to be within this radius
  chromatic: sRGB
  opengl: ???
  pin_memory: True

  N_rays: 512      # N_rays for training
  val_rayschunk: 256 # N_rays for validation
  val_downscale: 2    # downscale image for validation
  opengl: true

model:
  framework: pnr
  obj_bounding_radius: 1.0
  variance_init: 0.05
  # N_outside: 32       # number of outside NeRF++ points. If with_mask, MUST BE ZERO

  # upsampling related
  N_upsample_iters: 4     # config for upsampling using 'official_solution'

  normal_splatting: True
  normal_gaussian_estimate: True
  gaussian_scale_factor: 1.0

  surface:
    D: 8
    W: 256
    skips: [4]
    radius_init: 0.5
    embed_multires: 8

  radiance:
    D: 4
    W: 256
    skips: []
    embed_multires: -1
    embed_multires_view: 4  # as in the NeuS official implementaion

training:
  lr: 5.0e-4
  speed_factor: 10.0    # NOTE: unexpectedly, this is very important. setting to 1.0 will cause some of the DTU instances can not converge correctly.

  # neus
  with_mask: true # NeRF++ if false
  loss:
    w_splat: 0.1
    w_eik: 0.1
    w_aop: 0.1
    w_mask: 0.1
    w_rgb: 0.1
    pol_start_it: -1
    splat_start_it: 50000
    aop_mask: True
    pol_rew: True
    dop_upper: -1
    normal_perspective: True

  log_root_dir: "???"

  # lr decay
  scheduler:
    type: warmupcosine
    warmup_steps: 5000 # unit: itertation steps

  # num_epochs: 50000
  num_iters: 100000 # 300k

  ckpt_file: null # will be read by python as None
  ckpt_ignore_keys: []     # only change if you want to drop certain keys in the saved checkpionts.
  ckpt_only_use_keys: null # only change if you want to only use certain keys in the saved checkpionts.

  monitoring: tensorboard

  i_save: 900       # unit: seconds
  i_backup: 50000   # unit: itertation steps

  i_val: 5000
  i_val_mesh: 10000